# SPAdes assembly
rule spades_hybrid:
	input:
		forward = '{path}/Illumina/preprocessing/trimmomatic/{strain}_Illumina_1P.fastq.gz',
		forwardUnpaired = '{path}/Illumina/preprocessing/trimmomatic/{strain}_Illumina_1U.fastq.gz',
		reverse = '{path}/Illumina/preprocessing/trimmomatic/{strain}_Illumina_2P.fastq.gz',
		reverseUnpaired = '{path}/Illumina/preprocessing/trimmomatic/{strain}_Illumina_2U.fastq.gz',
		nanopore = '{path}/nanopore/demultiplexing/porechop/{strain}_porechop.fastq'
	output:
		contigs = '{path}/hybrid/assembly/{strain}_spades/contigs.fasta'	#contains resulting contigs
		# 'hybrid/assembly/{strain}_spades/contigs.paths',					#contains paths in the assembly graph corresponding to contigs.fasta (see details below)
		# 'hybrid/assembly/{strain}_spades/scaffolds.fasta',				#contains resulting scaffolds (recommended for use as resulting sequences)
		# 'hybrid/assembly/{strain}_spades/scaffolds.paths',				#contains paths in the assembly graph corresponding to scaffolds.fasta
		# 'hybrid/assembly/{strain}_spades/assembly_graph.gfa',				#contains SPAdes assembly graph and scaffolds paths in GFA 1.0 format
		# 'hybrid/assembly/{strain}_spades/assembly_graph.fastg'			#contains SPAdes assembly graph in FASTG format
	conda:
		'hybrid.yml'
	params:
		outputdir = '{path}/hybrid/assembly/{strain}_spades/'
	threads: 24 #default: 16
	shell:
		'spades.py -t {threads} --only-assembler --careful -1 {input.forward} -2 {input.reverse} --pe1-s {input.forwardUnpaired} --pe1-s {input.reverseUnpaired} --nanopore {input.nanopore} -o {params.outputdir}'
 		# --only-assembler		runs only assembling (without read error correction)
 		# --careful				tries to reduce number of mismatches and short indels
 		# --pacbio <filename>   file with PacBio reads
 		# --nanopore <filename> file with Nanopore reads
        # -1 <filename>			file with forward paired-end reads
		# -2 <filename>			file with reverse paired-end reads
		# --pe1-s				file with unpaired reads from paired-end library (for example, paired end reads can become unpaired during the error correction procedure)

# rename SPAdes output
rule rename_spades:
	input:
		contigs = rules.spades_hybrid.output.contigs
	output:
		spades = '{path}/hybrid/assembly/{strain}_spades/{strain}_spades.contigs.fasta'
	shell:
		'mv {input.contigs} {output.spades}'

# Unicycler assembly
rule unicycler:
	input:
		forward='{path}/Illumina/preprocessing/trimmomatic/{strain}_Illumina_1P.fastq.gz',
		reverse='{path}/Illumina/preprocessing/trimmomatic/{strain}_Illumina_2P.fastq.gz',
		nanopore = '{path}/nanopore/demultiplexing/porechop/{strain}_porechop.fastq'
	output:
		contigs = '{path}/hybrid/assembly/{strain}_unicycler/assembly.fasta'
	conda:
		'/mnt/prostlocal2/projects/st_mycoplasma_assembly/git/hybrid/hybrid.yml'
	params:
		outputdir = '{path}/hybrid/assembly/{strain}_unicycler/'
	threads: 24
	shell:
		'unicycler -t {threads} -1 {input.forward} -2 {input.reverse} -l {input.nanopore} -o {params.outputdir}'

# rename Unicycler output
rule rename_unicycler:
	input:
		contigs = rules.unicycler.output.contigs
	output:
		unicycler = '{path}/hybrid/assembly/{strain}_unicycler/{strain}_unicycler.contigs.fasta'
	shell:
		'mv {input.contigs} {output.unicycler}'